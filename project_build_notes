Sinatra MVC Application - Content Management System
___________________________________________________

Project Tracker:

An app for Building Company to track projects and sub-contractors. (Run on company server)
__________________________________________________________________


Planning:

Use Model-View-Controller architecture to create a domain model of Contractors(users),
Projects, and Sub-contractors persisted to a database using Active Record so that  
projects - project data, and sub-contractors - data can be created, retreived, updated, 
and deleted by users on.

Implement three models - Contractor (user) model, Project model, and Subcontractor model.

Model relationship/associations:

Contractor has_many :projects and has_many :subcontractors, through: :projects
Project belongs_to :contractor and belongs_to :subcontractor
Subcontractor has_many :projects and has_many :contractors, through: :projects 

Create multiple controllers with singular responsibilities. An application controller which will run 
the program using a contractors controller, projects controller, and subcontractors controller mounted 
to the application controller in config.ru. Application controller interacts between models (backend) 
and views (frontend). The contractors controller's singular resposibility will be contractor actions 
(sign in new, login existing, logout, etc.), the projects controller singular responsibility will be 
project CRUD actions, ans the subcontractors controller singular responsibility is subcontractor CRUD
actions.

Implement the use of Sessions - enable sessions and set session secret in application controller
configure method, to sign in new, login existing, and authenticate user access passwords.

Implement CRUD - enabling users to "create" projects persisted to db, "read"(retrieve/read from db)
persisted projects, "update" (retrieve and edit persisted project) and "destroy" (delete persisted
projects in db).
__________________________________________________________________ 

Include required features:

Use ActiveRecord with Sinatra.
Use multiple models.
Use at least one has_many relationship on a User model and one belongs_to relationship on another model.
Must have user accounts - users must be able to sign up, sign in, and sign out.
Validate uniqueness of user login attribute (username or email).
Once logged in, a user must have the ability to create, read, update and destroy the resource that belongs_to user.
Ensure that users can edit and delete only their own resources - not resources created by other users.
Validate user input so bad data cannot be persisted to the database.